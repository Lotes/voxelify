hide empty fields
hide empty methods

package Input {
  class Vertex {
    position: THREE.Vector3
    uv: THREE.Vector2
    lerp(Vertex, Number): Vertex
  }

  class Polygon {
    normal: THREE.Vector3
    points: Vertex[]
    material: Material
  }

  class MeshExtensions {
    Polygon[] getFaces(Mesh)
    THREE.Box3 getBoundingBox(Mesh)
  }
}

package Transform {
  class MaterialExtensions {
    ImageData getImageData(Material)
  }

  class PolygonExtensions {
    Polygon[] split(Polygon, Plane)
    WeightedColor getColor(Polygon)
  }

  class TriangleExtensions {
    Observable<WeightedColor> rasterize(Triangle)
  }

  class UnitSieve {
    constructor(bbox: THREE.Box3)
    Tuple<THREE.Vector3, Polygon>[] sieve(polygon: Polygon)
  }
}

package Output {
  class ColorGrid {
    get(x: int, y: int, z: int): WeightedColor
    fill(x: int, y: int, z: int, color: Color)
  }

  class Color {
    r(), g(), b(): int
  }

  class WeightedColor {
    weight: int
    r, g, b: int
    weight(): int
    add(WeightedColor)
  }
}

PolygonExtensions ..> MaterialExtensions: uses
PolygonExtensions --|> Polygon
Polygon <.. UnitSieve : "consumes/produces"
PolygonExtensions ..> WeightedColor : "produces"
PolygonExtensions ..> TriangleExtensions : "uses"
WeightedColor -up-|> Color
MeshExtensions .down.> Polygon : "produces"
Polygon o-- Vertex
WeightedColor --o ColorGrid
