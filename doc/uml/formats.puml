class Palette #ff8080 {
  colors: Color[]
  name: String
}

class Color {
  id: String
  name: String
  color: Color
}

class Part {
  rotation: THREE.Quaternion | THREE.Euler
  translate: THREE.Vector3
}

class Data {
  source: THREE.Box2
}

class Group {
  children: Part[]
}

class Use {
  symbol: Symbol
}

class Model {
  map: image
}

class AssembledModel #ff8080 {
  definitions: String => Part
  children: Part[]
}

class LayeredModel #ff8080 {
  layers: Layer[]
}

class FlatModel #ff8080 {

}

class Layer {
  source: THREE.Box2
  target: THREE.Vector2
}

AssembledModel -up-|> Model
FlatModel -up-|> Model
LayeredModel -up-|> Model
Group -up-|> Part
Data -up-|> Part
Use -up-|> Part

Group o-- Part
LayeredModel o-- Layer
Palette o-- Color
AssembledModel o-down- Part
